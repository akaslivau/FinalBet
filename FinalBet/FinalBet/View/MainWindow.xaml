<Controls:MetroWindow x:Class="FinalBet.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
                      xmlns:ext="clr-namespace:FinalBet.Extensions"
                      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:properties="clr-namespace:FinalBet.Properties"
                      xmlns:local="clr-namespace:FinalBet"
                      xmlns:model="clr-namespace:FinalBet.Model"
                      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                      xmlns:viewModel="clr-namespace:FinalBet.ViewModel"
                      xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                      xmlns:usercontrols="clr-namespace:FinalBet.Usercontrols"
                      mc:Ignorable="d"
                      WindowState="Maximized"
                      Title="{Binding DisplayName}" >
    <Controls:MetroWindow.Resources>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        </Style>
        <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
            <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
        </Style>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <ControlTemplate x:Key="StarToggleButton" TargetType="{x:Type ToggleButton}">
            <Canvas
                                                Width="40"
                                                Height="40"
                                                >
                <Path
                                                    x:Name="ButtonPath"
                                                    Width="40"
                                                    Height="40"
                                                    Canvas.Left="0"
                                                    Canvas.Top="0"
                                                    Data="M 127,37 L 104,105 L 34,105 L 91,150 L 69,218 L 127,176 L 187,218 L 164,150 L 223,105 L 151,105 L 127,37"
                                                    Fill="Transparent"
                                                    Stroke="{StaticResource AccentColorBrush}"
                                                    StrokeThickness="2"
                                                    Stretch="Fill">
                    <Path.LayoutTransform>
                        <RotateTransform CenterY="0.5" CenterX="0.8"/>
                    </Path.LayoutTransform>
                </Path>

            </Canvas>
            <!-- When checked, fill with Yellow -->
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="true">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard TargetName="ButtonPath" TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                <ColorAnimation From="Transparent" 
                                                                                    To="{StaticResource AccentColor}"
                                                                                    Duration="0:0:0.7"
                                                                    >
                                    <ColorAnimation.EasingFunction>
                                        <BounceEase EasingMode="EaseOut"/>
                                    </ColorAnimation.EasingFunction>
                                </ColorAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard TargetName="ButtonPath" TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                <ColorAnimation From="{StaticResource AccentColor}" 
                                                                                    To="Transparent"
                                                                                    Duration="0:0:0.4"
                                                                    >
                                    <ColorAnimation.EasingFunction>
                                        <PowerEase EasingMode="EaseInOut"/>
                                    </ColorAnimation.EasingFunction>
                                </ColorAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Controls:MetroWindow.Resources>
    <Controls:MetroWindow.InputBindings>
        <KeyBinding Command="{Binding Path=Database.MarkSelectedUrlsCommand}"
                    CommandParameter="{Binding ElementName=LeagueUrlsDatagrid, Path=SelectedItems}"
                    Key="D1" 
                    Modifiers="Control"/>
        <KeyBinding Command="{Binding Path=Database.MarkAutoCommand}"
                    CommandParameter="{Binding ElementName=LeagueUrlsDatagrid, Path=SelectedItems}"
                    Key="D2" 
                    Modifiers="Control"/>
        <KeyBinding Command="{Binding Path=Database.CheckMarksCommand}"
                    Key="D3" 
                    Modifiers="Control"/>
        <KeyBinding Command="{Binding Path=Database.UnmarkSelectedUrlsCommand}"
                    CommandParameter="{Binding ElementName=LeagueUrlsDatagrid, Path=SelectedItems}"
                    Key="D4" 
                    Modifiers="Control"/>
    </Controls:MetroWindow.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <TabControl Grid.Row="1">
            <TabItem Header="{Binding DisplayName}"
                         DataContext="{Binding Database}"
                         >
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <DockPanel Grid.Row="0">
                        <Menu>
                            <Menu.Resources>
                                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                                    <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
                                </Style>
                            </Menu.Resources>
                            <MenuItem Header="Ссылки">
                                <MenuItem Header="Загрузить для лиги" Command="{Binding LoadCountryUrlsCommand}"/>
                                <MenuItem Header="Загрузить всё" Command="{Binding LoadAllUrlsCommand}"/>
                                <Separator/>
                                <MenuItem Header="Показать детали" Command="{Binding ShowFileDetailsCommand}"/>
                            </MenuItem>
                            <MenuItem Header="Матчи">
                                <MenuItem Header="Открыть директорию" Command="{Binding OpenArchiveFolderCommand}"/>
                                <MenuItem Header="Загрузить" Command="{Binding LoadMatchesCommand}"/>
                            </MenuItem>
                            <MenuItem Header="Счета таймов">
                                    <MenuItem Header="Загрузить все"
                                              Command="{Binding LoadMatchDetailsCommand}"
                                    />
                                <MenuItem Header="Коррекция"
                                          Command="{Binding CoerceResultsCommand}"
                                />
                            </MenuItem>
                            <MenuItem Header="Кэфы">
                                <MenuItem Header="1x2 из файлов" Command="{Binding Load1x2CoefsCommand}"/>
                                <MenuItem Header="Over-under" Command="{Binding LoadOuCoefsCommand}"/>
                                <MenuItem Header="Fora" Command="{Binding LoadForaCoefsCommand}"/>
                                <MenuItem Header="BTS" Command="{Binding LoadBtsCoefsCommand}"/>
                            </MenuItem>
                            <MenuItem Header="Отметки">
                                <MenuItem Header="Отметить"
                                          InputGestureText="Ctrl+1"
                                          CommandParameter="{Binding ElementName=LeagueUrlsDatagrid, Path=SelectedItems}"
                                          Command="{Binding MarkSelectedUrlsCommand}"
                                          />
                                <MenuItem Header="Автомат"
                                          InputGestureText="Ctrl+2"
                                          CommandParameter="{Binding ElementName=LeagueUrlsDatagrid, Path=SelectedItems}"
                                          Command="{Binding MarkAutoCommand}"/>
                                <Separator/>
                                <MenuItem Header="Проверить"
                                          InputGestureText="Ctrl+3"
                                          Command="{Binding CheckMarksCommand}"
                                          />
                                <MenuItem Header="Удалить"
                                          InputGestureText="Ctrl+4"
                                        CommandParameter="{Binding ElementName=LeagueUrlsDatagrid, Path=SelectedItems}"
                                        Command="{Binding UnmarkSelectedUrlsCommand}"/>


                            </MenuItem>
                            <MenuItem Header="[Danger zone]">
                                <MenuItem Header="Удалить данные для турнира" 
                                          Command="{Binding RemoveLeagueDataCommand}"
                                          />
                            </MenuItem>
                            <MenuItem Header="Прервать загрузку"  Command="{Binding BreakCommand}"/>
                            <MenuItem Header="Тестовая команда"  Command="{Binding TestCommand}"/>
                            <MenuItem Header="Async Тестовая команда"  Command="{Binding TestAsyncCommand}"/>
                        </Menu>
                    </DockPanel>
                    <DockPanel Grid.Row="1" HorizontalAlignment="Left">
                        <CheckBox Content="Только избранные страны" 
                                  Margin="5,5,25,5"
                                  IsChecked="{Binding ShowOnlyFavorites, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        />

                            <ComboBox Width="300"
                                      Height="20"
                                      Name="MarkComboBox"
                                      Margin="{StaticResource ControlMargin}"
                                      DisplayMemberPath="name"
                                      ItemsSource="{Binding Source={x:Static model:Global.LeagueMarks}}"
                                      SelectedItem="{Binding Path=SelectedLeagueMark, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            />
                        <TextBlock Margin="{StaticResource ControlMargin}"
                                   Text="Режим загрузки"
                                   VerticalAlignment="Center"
                                   />
                        <ComboBox Width="300"
                                  Height="20"
                                  Margin="{StaticResource ControlMargin}"
                                  ItemsSource="{Binding Source={x:Static model:Global.MatchLoadModes}}"
                                  SelectedItem="{Binding Path=SelectedMatchLoadMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        />
                    </DockPanel>


                    <Grid Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3*"/>
                            <ColumnDefinition Width="10*"/>
                        </Grid.ColumnDefinitions>
                        <GroupBox Grid.Column="0" Header="Страны" 
                                  Margin="{StaticResource ControlMargin}">
                            <ListBox ItemsSource="{Binding Table}"
                                     SelectedItem="{Binding Selected}"
                                     DisplayMemberPath="name"
                            >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding SetUrlsRepoCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ListBox>
                        </GroupBox>
                        <Grid Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <GroupBox Grid.Row="1" Header="Async progress info" 
                                      Visibility="{Binding Path=IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}"
                                      Margin="{StaticResource ControlMargin}">
                                <StackPanel  Orientation="Vertical" HorizontalAlignment="Center">
                                    <TextBlock Text="{Binding Path=StatusText}" 
                                               Style="{StaticResource Textblock.H3}"/>
                                    <Controls:MetroProgressBar 
                                        Margin="{StaticResource ControlMargin}"
                                        Width="400"
                                        Height="15"
                                        Value="{Binding Path=ProgressBarValue}"
                                        Background="{StaticResource ControlBorderBrush}"
                                        
                                    />
                                </StackPanel>
                            </GroupBox>
                            <Grid Grid.Row="2">
                                <Grid Height="50">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <StackPanel Grid.Column="0"
                                    Orientation="Horizontal"
                                    Margin="{StaticResource ControlMargin}"
                                    >
                                        <TextBox Width="300" 
                                             Height="25"
                                             DataContext="{Binding Path=LeagueUrls}"
                                             Text="{Binding Path=SearchText, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                            <TextBox.InputBindings>
                                                <KeyBinding Key="Enter" Command="{Binding SearchCommand}"/>
                                            </TextBox.InputBindings>
                                            <TextBox.Style>
                                                <Style BasedOn="{StaticResource MetroTextBox}" TargetType="{x:Type TextBox}">
                                                    <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="True" />
                                                    <Style.Triggers>
                                                        <Trigger Property="Controls:TextBoxHelper.HasText" Value="False">
                                                            <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="False" />
                                                            <Setter Property="Controls:TextBoxHelper.Watermark" Value="Быстрый фильтр..." />
                                                        </Trigger>
                                                        <Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
                                                            <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="True" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBox.Style>
                                        </TextBox>
                                    </StackPanel>

                                    <Grid Grid.Column="2">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <ToggleButton Grid.Column="2" 
                                                      HorizontalAlignment="Right"
                                                      IsChecked="{Binding IsFavorite, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Margin="{StaticResource ControlMargin}"
                                            Style="{DynamicResource MahApps.Metro.Styles.MetroCircleToggleButtonStyle}"
                                            Template="{DynamicResource StarToggleButton}"
                                        />

                                        <TextBlock Grid.Column="0"
                                                   HorizontalAlignment="Right"
                                                   Text="{Binding Path=Selected.name, Mode=OneWay}" 
                                                   Style="{StaticResource Textblock.H1}"
                                                   VerticalAlignment="Center"
                                        />
                                        <Border Grid.Column="1"
                                                BorderThickness="0.5" 
                                                BorderBrush="LightSlateGray" 
                                                Margin="{StaticResource ControlMargin}"
                                                Height="30"
                                                Width="40"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Right"
                                        >
                                            <svgc:SvgViewbox 
                                                Height="30" Width="40" 
                                                Stretch="Uniform" 
                                                ext:SvgViewboxAttachedProperties.Source="{Binding Path=FlagPath}"/>
                                        </Border>
                                    </Grid>
                                </Grid>

                            </Grid>
                            <Border Grid.Row="3" BorderThickness="2" 
                                Margin="{StaticResource ControlMargin}"
                                BorderBrush="LightSlateGray"/>
                            <DataGrid Grid.Row="4" 
                                  Name="LeagueUrlsDatagrid"
                                  DataContext="{Binding LeagueUrls}"
                                  Margin="{StaticResource ControlMargin}"
                                  AutoGenerateColumns="False"
                                  CanUserDeleteRows="False"
                                  CanUserAddRows="False"
                                  HeadersVisibility="All"
                                  ItemsSource="{Binding Path=View}"
                                  SelectedItem="{Binding Selected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  RowHeaderWidth="0"
                                  SelectionUnit="FullRow" Grid.ColumnSpan="2">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="id" Width="100"
                                                        IsReadOnly="True"
                                                        Binding="{Binding Path=Source.id, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                    />

                                    <DataGridTextColumn Header="Название" Width="4*"
                                                        IsReadOnly="True"
                                                        Binding="{Binding Path=Source.url, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                    />

                                    <DataGridTextColumn Header="Отметка" Width="*"
                                                        IsReadOnly="True"
                                                        Binding="{Binding Path=Source.mark, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                    />
                                    <DataGridTextColumn Header="Текущ." Width="*"
                                                    IsReadOnly="True"
                                                    Binding="{Binding Path=IsCurrent, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                />

                                    <DataGridTextColumn Header="Год" Width="*"
                                                        IsReadOnly="True"
                                                        Binding="{Binding Path=Source.year, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                    />
                                    <DataGridTextColumn Header="Год int" Width="*"
                                                    IsReadOnly="True"
                                                    Binding="{Binding Path=PossibleYear, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                />

                                    <DataGridTextColumn Header="N, шт." Width="*"
                                                        IsReadOnly="True"
                                                        Binding="{Binding Path=MatchesCount, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                    />

                                    <DataGridTextColumn Header="Файл" Width="*"
                                                        IsReadOnly="True"
                                                        Binding="{Binding Path=File, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                    />

                                </DataGrid.Columns>
                                <DataGrid.Style>
                                    <Style BasedOn="{StaticResource MetroDataGrid}" TargetType="{x:Type DataGrid}">
                                        <Setter Property="AlternatingRowBackground" Value="{DynamicResource GrayBrush10}" />
                                    </Style>
                                </DataGrid.Style>
                            </DataGrid>
                        </Grid>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="{Binding DisplayName}"
                     DataContext="{Binding RedGreenTable}"
            >
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <GroupBox Grid.Column="0" Header="Выбор турнира" Margin="{StaticResource ControlMargin}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ComboBox Grid.Row="0" Grid.Column="1"
                                          Width="200" Height="25"
                                          Margin="{StaticResource ControlMargin}"
                                          ItemsSource="{Binding Leagues}"
                                          SelectedItem="{Binding SelectedLeague, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                          DisplayMemberPath="name"
                                />
                                <ComboBox  Grid.Row="1" Grid.Column="1"
                                           Width="200" Height="25"
                                           Margin="{StaticResource ControlMargin}"
                                           ItemsSource="{Binding Tournaments}"
                                           SelectedItem="{Binding SelectedTournament, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                />

                                <ComboBox Grid.Row="0" Grid.Column="2"
                                          Width="200"
                                          Height="25"
                                          VerticalAlignment="Center"
                                          Margin="{StaticResource ControlMargin}"
                                          ItemsSource="{Binding LeagueYears}"
                                          SelectedItem="{Binding SelectedYear}"
                                />

                                <ComboBox Grid.Row="1" Grid.Column="2"
                                          Width="200" Height="25"
                                          Margin="{StaticResource ControlMargin}"
                                          ItemsSource="{Binding SubSeasons}"
                                          SelectedItem="{Binding SelectedSubSeason, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                          DisplayMemberPath="name"
                                          Visibility="{Binding OnlyMainSeason, Converter={StaticResource BooleanToVisibilityConverter}}"
                                />
                            </Grid>
                        </GroupBox>

                        <usercontrols:CodeSelector Grid.Column="1"
                                                   SolveMode="{Binding SolveMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        />

                        <usercontrols:MatchDetailsUserControl Grid.Column="2"
                                                              MatchId="{Binding SelectedMatchId, UpdateSourceTrigger=PropertyChanged}"
                        />
                    </Grid>

                    <DockPanel Grid.Row="1">
                        <Menu>
                            <Menu.Resources>
                                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                                    <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
                                </Style>
                            </Menu.Resources>
                            <MenuItem Header="Рисовать" Command="{Binding DrawCommand}"
                                      CommandParameter="{Binding ElementName=RedGreenCanvas}"
                                      />
                            <MenuItem Header="Тестовая команда" Command="{Binding TestCommand}"
                                      />
                        </Menu>
                    </DockPanel>

                    <Grid Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ScrollViewer Grid.Column="0"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Top"
                                      HorizontalScrollBarVisibility="Auto" 
                                      VerticalScrollBarVisibility="Auto">
                            <viewModel:DrawingCanvas
                                ClipToBounds="True"
                                x:Name="RedGreenCanvas"
                                CellForegroundBrush="White"
                                TeamBrush="Black"
                                FontSize="12"
                                CellSize="40"
                            >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                        <ei:CallMethodAction
                                            TargetObject="{Binding}"
                                            MethodName="OnTableMouseClick"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <viewModel:DrawingCanvas.Background>
                                    <LinearGradientBrush Opacity="0.5">
                                        <GradientStop Color="{StaticResource AccentColor4}" Offset="0.2"/>
                                        <GradientStop Color="{StaticResource AccentColor}" Offset="0.8"/>
                                    </LinearGradientBrush>
                                </viewModel:DrawingCanvas.Background>
                            </viewModel:DrawingCanvas>
                        </ScrollViewer>
                        <usercontrols:FilterUserControl Grid.Column="1"
                                                        Filter="{Binding Path=Filter}"
                                                        />

                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="{Binding DisplayName}"
                     DataContext="{Binding TestDataViewModel}"
            >
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Orientation="Horizontal">
                            <ComboBox Width="200" Height="25"
                                      Margin="{StaticResource ControlMargin}"
                                      ItemsSource="{Binding Leagues}"
                                      SelectedItem="{Binding SelectedLeague, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      DisplayMemberPath="name"
                            />
                            <ComboBox  Width="200" Height="25"
                                       Margin="{StaticResource ControlMargin}"
                                       ItemsSource="{Binding Tournaments}"
                                       SelectedItem="{Binding SelectedTournament, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            />
                            <TextBlock Text="Год отсечки результатов:"
                                       Style="{StaticResource Textblock.H3}"
                                       VerticalAlignment="Center"
                                       />
                            <Controls:NumericUpDown Margin="{StaticResource ControlMargin}"
                                                    Minimum="-1"
                                                    Width="125"
                                                    Value="{Binding Path=ResultBorderYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    />
                    </StackPanel>
                    <DockPanel Grid.Row="1">
                        <Menu>
                            <MenuItem Header="Тестировать лигу" Command="{Binding DoTestCommand}"/>
                            <MenuItem Header="Тестировать все лиги" Command="{Binding TestAllCommand}"/>
                            <MenuItem Header="Прервать" Command="{Binding BreakCommand}"/>
                            <MenuItem Header="Очистить результаты таймов" Command="{Binding ClearHalfResultsCommand}"/>
                        </Menu>
                    </DockPanel>
                    <DockPanel Grid.Row="2">
                        <Menu>
                            <MenuItem Header="Тест №1" Command="{Binding TestOneCommand}"/>
                            <MenuItem Header="Тест №2" >
                                <MenuItem Header="Запуск" Command="{Binding TestTwoCommand}"/>
                                <MenuItem Header="Коррекция из файла" Command="{Binding CorrectTestTwoCommand}"/>
                            </MenuItem>
                            <MenuItem Header="Тест №3" Command="{Binding TestThreeCommand}"/>
                            <MenuItem Header="Тест №4" Command="{Binding TestFourCommand}">
                                <MenuItem Header="Запуск" Command="{Binding TestFourCommand}"/>
                                <MenuItem Header="Автокоррекция" IsCheckable="True" IsChecked="{Binding Coerce4}"/>
                            </MenuItem>
                            <MenuItem Header="Тест №5" Command="{Binding TestFiveCommand}"/>
                            <MenuItem Header="Тест 1X2" >
                                <MenuItem Header="Запуск" Command="{Binding Test1X2Command}"/>
                                <MenuItem Header="Корректировка" Command="{Binding Coerce1X2Command}"/>
                            </MenuItem>
                            <MenuItem Header="Тест Ou" >
                                <MenuItem Header="Запуск" Command="{Binding TestOuCommand}"/>
                                <MenuItem Header="Корректировка" />
                            </MenuItem>
                            <MenuItem Header="Тест Fora" >
                                <MenuItem Header="Запуск" Command="{Binding TestForaCommand}"/>
                                <MenuItem Header="Корректировка" />
                            </MenuItem>
                            <MenuItem Header="Тест Bts" >
                                <MenuItem Header="Запуск" Command="{Binding TestBtsCommand}"/>
                                <MenuItem Header="Корректировка" />
                            </MenuItem>

                        </Menu>
                    </DockPanel>
                    <Grid Grid.Row="3">
                        <TextBox IsReadOnly="True"
                                 AcceptsReturn="True"
                                 TextWrapping="Wrap"
                                 Text ="{Binding Path=Output}"
                                 HorizontalContentAlignment="Left"
                        />
                    </Grid>
                </Grid>
            </TabItem>
        </TabControl>
        <StatusBar Grid.Row="2">
            <StatusBarItem>Final Bet</StatusBarItem>
            <Separator Style="{StaticResource MetroStatusBarSeparator}" />
            <StatusBarItem Content="Показать лог">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding OpenLogCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </StatusBarItem>
            <StatusBarItem Content="{Binding Source={x:Static model:Global.Current}, Path=Infos}"
                           ContentStringFormat="Сообщений: {0} шт. "/>
            <StatusBarItem Content="{Binding Source={x:Static model:Global.Current}, Path=Warnings}"
                           ContentStringFormat="Предупреждений: {0} шт. "/>
            <StatusBarItem Content="{Binding Source={x:Static model:Global.Current}, Path=Errors}"
                           ContentStringFormat="Ошибок: {0} шт. "/>

        </StatusBar>
    </Grid>
</Controls:MetroWindow>
