<Controls:MetroWindow x:Class="FinalBet.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
                      xmlns:ext="clr-namespace:FinalBet.Extensions"
                      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:properties="clr-namespace:FinalBet.Properties"
                      xmlns:local="clr-namespace:FinalBet"
                      xmlns:model="clr-namespace:FinalBet.Model"
                      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                      mc:Ignorable="d"
                      WindowState="Maximized"
                      Title="MainWindow" Height="450" Width="1200">
    <Controls:MetroWindow.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </Controls:MetroWindow.Resources>
    <Controls:MetroWindow.InputBindings>
        <KeyBinding Command="{Binding Path=Database.MarkSelectedUrlsCommand}"
                    CommandParameter="{Binding ElementName=LeagueUrlsDatagrid, Path=SelectedItems}"
                    Key="D1" 
                    Modifiers="Control"/>
        <KeyBinding Command="{Binding Path=Database.MarkAutoCommand}"
                    CommandParameter="{Binding ElementName=LeagueUrlsDatagrid, Path=SelectedItems}"
                    Key="D2" 
                    Modifiers="Control"/>
        <KeyBinding Command="{Binding Path=Database.UnmarkSelectedUrlsCommand}"
                    CommandParameter="{Binding ElementName=LeagueUrlsDatagrid, Path=SelectedItems}"
                    Key="D3" 
                    Modifiers="Control"/>
    </Controls:MetroWindow.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal">
            <Button Height="40" Width="100" Content="Test" Command="{Binding TestCommand}"/>
        </StackPanel>
        <TabControl Grid.Row="1">
            <TabControl.Resources>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
                </Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
                </Style>
            </TabControl.Resources>
            <TabItem Header="База данных"
                         DataContext="{Binding Database}"
                         >
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <DockPanel Grid.Row="0">
                        <Menu>
                            <Menu.Resources>
                                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                                    <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
                                </Style>
                            </Menu.Resources>
                            <MenuItem Header="Ссылки">
                                <MenuItem Header="Загрузить для выбранной лиги" Command="{Binding LoadUrlsCommand}"/>
                                <MenuItem Header="Загрузить всё" Command="{Binding LoadAllUrlsCommand}"/>
                            </MenuItem>
                            <MenuItem Header="Матчи">
                                <MenuItem Header="Открыть директорию" Command="{Binding OpenArchiveFolderCommand}"/>
                                <MenuItem Header="Загрузить для выбранной URL" Command="{Binding LoadMatchesCommand}"/>
                                <MenuItem Header="Загрузить отмеченные" Command="{Binding LoadMarkedMatchesCommand}"/>
                                <Separator/>
                                <MenuItem Header="Загрузить все матчи"/>
                            </MenuItem>
                            <MenuItem Header="Отметки">
                                <MenuItem Header="Отметить"
                                          InputGestureText="Ctrl+1"
                                          CommandParameter="{Binding ElementName=LeagueUrlsDatagrid, Path=SelectedItems}"
                                          Command="{Binding MarkSelectedUrlsCommand}"
                                          />
                                <MenuItem Header="Автомат"
                                          InputGestureText="Ctrl+2"
                                          CommandParameter="{Binding ElementName=LeagueUrlsDatagrid, Path=SelectedItems}"
                                          Command="{Binding MarkAutoCommand}"/>
                                <Separator/>
                                <MenuItem Header="Удалить"
                                          InputGestureText="Ctrl+3"
                                        CommandParameter="{Binding ElementName=LeagueUrlsDatagrid, Path=SelectedItems}"
                                        Command="{Binding UnmarkSelectedUrlsCommand}"/>


                            </MenuItem>
                            <MenuItem Header="Прервать загрузку"  Command="{Binding BreakCommand}"/>
                        </Menu>
                    </DockPanel>
                    <DockPanel Grid.Row="1" HorizontalAlignment="Left">
                        <CheckBox Content="Только избранные страны" 
                                  Margin="5,5,25,5"
                                  IsChecked="{Binding OnlyFavorites, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        />

                        <Controls:Badged x:Name="CountingBadge1"
                                         Badge="{Binding ElementName=LeagueUrlsDatagrid, Path=SelectedItems.Count}"
                                         BadgePlacementMode="Left"
                                         BadgeBackground="LightSeaGreen"
                                         Margin="{StaticResource ControlMargin}">
                            <ComboBox Width="300"
                                      Height="20"
                                      Margin="{StaticResource ControlMargin}"
                                      DisplayMemberPath="name"
                                      ItemsSource="{Binding Source={x:Static model:Global.LeagueMarks}}"
                                      SelectedItem="{Binding Path=SelectedLeagueMark, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            />
                        </Controls:Badged>
                    </DockPanel>


                    <Grid Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="10*"/>
                    </Grid.ColumnDefinitions>
                    <GroupBox Grid.Column="0" Header="Страны" 
                                  Margin="{StaticResource ControlMargin}">
                        <ListBox Grid.Column="0"
                                     ItemsSource="{Binding Table}"
                                     SelectedItem="{Binding Selected}"
                                     DisplayMemberPath="name"
                            />
                    </GroupBox>
                    <Grid Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                        <Grid Grid.Row="2">
                            <Grid Height="50">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Grid.Column="0"
                                    Orientation="Horizontal"
                                    Margin="{StaticResource ControlMargin}"
                                    >
                                    <TextBox Width="300" 
                                             Height="25"
                                             DataContext="{Binding Path=LeagueUrls}"
                                             Text="{Binding Path=SearchText, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                        <TextBox.InputBindings>
                                            <KeyBinding Key="Enter" Command="{Binding SearchCommand}"/>
                                        </TextBox.InputBindings>
                                        <TextBox.Style>
                                            <Style BasedOn="{StaticResource MetroTextBox}" TargetType="{x:Type TextBox}">
                                                <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="True" />
                                                <Style.Triggers>
                                                    <Trigger Property="Controls:TextBoxHelper.HasText" Value="False">
                                                        <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="False" />
                                                        <Setter Property="Controls:TextBoxHelper.Watermark" Value="Быстрый фильтр..." />
                                                    </Trigger>
                                                    <Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
                                                        <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="True" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </StackPanel>

                                <StackPanel Grid.Column="1" Orientation="Vertical" HorizontalAlignment="Center">
                                    <TextBlock Text="{Binding Path=StatusText}" 
                                               Style="{StaticResource Textblock.H3}"/>
                                    <Controls:MetroProgressBar 
                                        Margin="{StaticResource ControlMargin}"
                                        Width="200"
                                        Height="10"
                                        Value="{Binding Path=ProgressBarValue}"
                                        Background="{StaticResource ControlBorderBrush}"
                                        Visibility="{Binding Path=IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}"
                                    />

                                </StackPanel>
                                    <Grid Grid.Column="2">
                                        <Grid.Resources>
                                            <Canvas x:Key="AppBar" x:Name="appbar_star" Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                                                <Path Width="41.1667" Height="38" Canvas.Left="17.4167" Canvas.Top="18" Stretch="Fill" Fill="#FF000000" Data="F1 M 17.4167,32.25L 32.9107,32.25L 38,18L 43.0893,32.25L 58.5833,32.25L 45.6798,41.4944L 51.4583,56L 38,48.0833L 26.125,56L 30.5979,41.7104L 17.4167,32.25 Z "/>
                                            </Canvas>
                                            <!-- StarButton Template -->
                                            <ControlTemplate x:Key="StarToggleButton" TargetType="{x:Type ToggleButton}">
                                                <Canvas
                                                Width="76"
                                                Height="76"
                                                Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                                                    <Path
                                                    x:Name="ButtonPath"
                                                    Width="41.166"
                                                    Height="38"
                                                    Canvas.Left="17.416"
                                                    Canvas.Top="0"
                                                    Data="F1 M 17.416,32.25L 32.910,32.25L 38,18L 43.089,32.25L 58.583,32.25L 45.679,41.494L 51.458,56L 38,48.083L 26.125,56L 30.597,41.710L 17.416,32.25 Z "
                                                    Fill="Transparent"
                                                    Stroke="{StaticResource AccentBaseColorBrush}"
                                                    StrokeThickness="2"
                                                    Stretch="Fill"/>
                                                </Canvas>
                                                <!-- When checked, fill with Yellow -->
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked" Value="true">
                                                        <Setter TargetName="ButtonPath" Property="Fill" Value="{StaticResource AccentBaseColorBrush}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>

                                        </Grid.Resources>
                                        <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <ToggleButton Grid.Column="2" 
                                                      HorizontalAlignment="Right"
                                                      IsChecked="{Binding IsFavorite, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Margin="{StaticResource ControlMargin}"
                                            Style="{DynamicResource MahApps.Metro.Styles.MetroCircleToggleButtonStyle}"
                                            Template="{DynamicResource StarToggleButton}"
                                        />

                                        <TextBlock Grid.Column="0"
                                                   HorizontalAlignment="Right"
                                                   Text="{Binding Path=Selected.name, Mode=OneWay}" 
                                                   Style="{StaticResource Textblock.H1}"
                                                   VerticalAlignment="Center"
                                        />
                                        <Border Grid.Column="1"
                                                BorderThickness="0.5" 
                                                BorderBrush="LightSlateGray" 
                                                Margin="{StaticResource ControlMargin}"
                                                Height="30"
                                                Width="40"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Right"
                                        >
                                            <svgc:SvgViewbox 
                                                Height="30" Width="40" 
                                                Stretch="Uniform" 
                                                ext:SvgViewboxAttachedProperties.Source="{Binding Path=FlagPath}"/>
                                        </Border>
                                    </Grid>
                            </Grid>
                            
                        </Grid>
                        <Border Grid.Row="3" BorderThickness="2" 
                                Margin="{StaticResource ControlMargin}"
                                BorderBrush="LightSlateGray"/>
                        <DataGrid Grid.Row="4" 
                                  Name="LeagueUrlsDatagrid"
                                  DataContext="{Binding LeagueUrls}"
                                  Margin="{StaticResource ControlMargin}"
                                  AutoGenerateColumns="False"
                                  CanUserDeleteRows="False"
                                  CanUserAddRows="False"
                                  HeadersVisibility="All"
                                  ItemsSource="{Binding Path=View}"
                                  SelectedItem="{Binding Selected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  RowHeaderWidth="0"
                                  SelectionUnit="FullRow" Grid.ColumnSpan="2">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="id" Width="100"
                                                        IsReadOnly="True"
                                                        Binding="{Binding Path=Source.id, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                    />

                                <DataGridTextColumn Header="Название" Width="4*"
                                                        IsReadOnly="True"
                                                        Binding="{Binding Path=Source.url, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                    />

                                <DataGridTextColumn Header="Отметка" Width="*"
                                                        IsReadOnly="True"
                                                        Binding="{Binding Path=Source.mark, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                    />
                                <DataGridTextColumn Header="Текущ." Width="*"
                                                    IsReadOnly="True"
                                                    Binding="{Binding Path=IsCurrent, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                />

                                    <DataGridTextColumn Header="Год" Width="*"
                                                        IsReadOnly="True"
                                                        Binding="{Binding Path=Source.year, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                    />
                                <DataGridTextColumn Header="Год int" Width="*"
                                                    IsReadOnly="True"
                                                    Binding="{Binding Path=PossibleYear, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                />

                                <DataGridTextColumn Header="N, шт." Width="*"
                                                        IsReadOnly="True"
                                                        Binding="{Binding Path=MatchesCount, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                    />

                                <DataGridTextColumn Header="Файл" Width="*"
                                                        IsReadOnly="True"
                                                        Binding="{Binding Path=File, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                    />

                            </DataGrid.Columns>
                            <DataGrid.Style>
                                <Style BasedOn="{StaticResource MetroDataGrid}" TargetType="{x:Type DataGrid}">
                                    <Setter Property="AlternatingRowBackground" Value="{DynamicResource GrayBrush10}" />
                                </Style>
                            </DataGrid.Style>
                        </DataGrid>
                    </Grid>
                    </Grid>
                </Grid>
            </TabItem>
        </TabControl>
        <StatusBar Grid.Row="2">
            <StatusBarItem>Final Bet</StatusBarItem>
            <Separator Style="{StaticResource MetroStatusBarSeparator}" />
            <StatusBarItem Content="Показать лог">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding OpenLogCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </StatusBarItem>
            <StatusBarItem Content="{Binding Source={x:Static model:Global.Current}, Path=Infos}"
                           ContentStringFormat="Сообщений: {0} шт. "/>
            <StatusBarItem Content="{Binding Source={x:Static model:Global.Current}, Path=Warnings}"
                           ContentStringFormat="Предупреждений: {0} шт. "/>
            <StatusBarItem Content="{Binding Source={x:Static model:Global.Current}, Path=Errors}"
                           ContentStringFormat="Ошибок: {0} шт. "/>

        </StatusBar>
    </Grid>
</Controls:MetroWindow>
